// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/file_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "services/file_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Services {

namespace {

const ::google::protobuf::Descriptor* FileMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileBytes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileBytes_reflection_ = NULL;
const ::google::protobuf::Descriptor* EmptyMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EmptyMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExistMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExistMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_services_2ffile_5fservice_2eproto() {
  protobuf_AddDesc_services_2ffile_5fservice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "services/file_service.proto");
  GOOGLE_CHECK(file != NULL);
  FileMessage_descriptor_ = file->message_type(0);
  static const int FileMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileMessage, id_),
  };
  FileMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FileMessage_descriptor_,
      FileMessage::default_instance_,
      FileMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(FileMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileMessage, _is_default_instance_));
  FileBytes_descriptor_ = file->message_type(1);
  static const int FileBytes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBytes, data_),
  };
  FileBytes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FileBytes_descriptor_,
      FileBytes::default_instance_,
      FileBytes_offsets_,
      -1,
      -1,
      -1,
      sizeof(FileBytes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBytes, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBytes, _is_default_instance_));
  EmptyMessage_descriptor_ = file->message_type(2);
  static const int EmptyMessage_offsets_[1] = {
  };
  EmptyMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EmptyMessage_descriptor_,
      EmptyMessage::default_instance_,
      EmptyMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(EmptyMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmptyMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmptyMessage, _is_default_instance_));
  ExistMessage_descriptor_ = file->message_type(3);
  static const int ExistMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExistMessage, result_),
  };
  ExistMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExistMessage_descriptor_,
      ExistMessage::default_instance_,
      ExistMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExistMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExistMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExistMessage, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_services_2ffile_5fservice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FileMessage_descriptor_, &FileMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FileBytes_descriptor_, &FileBytes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EmptyMessage_descriptor_, &EmptyMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExistMessage_descriptor_, &ExistMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_services_2ffile_5fservice_2eproto() {
  delete FileMessage::default_instance_;
  delete FileMessage_reflection_;
  delete FileBytes::default_instance_;
  delete FileBytes_reflection_;
  delete EmptyMessage::default_instance_;
  delete EmptyMessage_reflection_;
  delete ExistMessage::default_instance_;
  delete ExistMessage_reflection_;
}

void protobuf_AddDesc_services_2ffile_5fservice_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033services/file_service.proto\022\010Services\""
    "\031\n\013FileMessage\022\n\n\002id\030\001 \001(\t\"\031\n\tFileBytes\022"
    "\014\n\004data\030\001 \001(\014\"\016\n\014EmptyMessage\"\036\n\014ExistMe"
    "ssage\022\016\n\006result\030\001 \001(\0102\360\001\n\013FileService\0223\n"
    "\003Get\022\025.Services.FileMessage\032\023.Services.F"
    "ileBytes\"\000\0226\n\006Create\022\023.Services.FileByte"
    "s\032\025.Services.FileMessage\"\000\0229\n\006Delete\022\025.S"
    "ervices.FileMessage\032\026.Services.EmptyMess"
    "age\"\000\0229\n\006Exists\022\025.Services.FileMessage\032\026"
    ".Services.ExistMessage\"\000BO\n\007ex.grpcZ>git"
    "hub.com/Enebra/ServiceCoordinator/grpc/s"
    "ervices/fileservice\242\002\003RTGb\006proto3", 473);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "services/file_service.proto", &protobuf_RegisterTypes);
  FileMessage::default_instance_ = new FileMessage();
  FileBytes::default_instance_ = new FileBytes();
  EmptyMessage::default_instance_ = new EmptyMessage();
  ExistMessage::default_instance_ = new ExistMessage();
  FileMessage::default_instance_->InitAsDefaultInstance();
  FileBytes::default_instance_->InitAsDefaultInstance();
  EmptyMessage::default_instance_->InitAsDefaultInstance();
  ExistMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_services_2ffile_5fservice_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_services_2ffile_5fservice_2eproto {
  StaticDescriptorInitializer_services_2ffile_5fservice_2eproto() {
    protobuf_AddDesc_services_2ffile_5fservice_2eproto();
  }
} static_descriptor_initializer_services_2ffile_5fservice_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileMessage::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileMessage::FileMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Services.FileMessage)
}

void FileMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FileMessage::FileMessage(const FileMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Services.FileMessage)
}

void FileMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FileMessage::~FileMessage() {
  // @@protoc_insertion_point(destructor:Services.FileMessage)
  SharedDtor();
}

void FileMessage::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void FileMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileMessage_descriptor_;
}

const FileMessage& FileMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_services_2ffile_5fservice_2eproto();
  return *default_instance_;
}

FileMessage* FileMessage::default_instance_ = NULL;

FileMessage* FileMessage::New(::google::protobuf::Arena* arena) const {
  FileMessage* n = new FileMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Services.FileMessage)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool FileMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Services.FileMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Services.FileMessage.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Services.FileMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Services.FileMessage)
  return false;
#undef DO_
}

void FileMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Services.FileMessage)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.FileMessage.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:Services.FileMessage)
}

::google::protobuf::uint8* FileMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Services.FileMessage)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Services.FileMessage.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Services.FileMessage)
  return target;
}

int FileMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Services.FileMessage)
  int total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Services.FileMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FileMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FileMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Services.FileMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Services.FileMessage)
    MergeFrom(*source);
  }
}

void FileMessage::MergeFrom(const FileMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Services.FileMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void FileMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Services.FileMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileMessage::CopyFrom(const FileMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Services.FileMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileMessage::IsInitialized() const {

  return true;
}

void FileMessage::Swap(FileMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileMessage::InternalSwap(FileMessage* other) {
  id_.Swap(&other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileMessage_descriptor_;
  metadata.reflection = FileMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileMessage

// optional string id = 1;
void FileMessage::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FileMessage::id() const {
  // @@protoc_insertion_point(field_get:Services.FileMessage.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FileMessage::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.FileMessage.id)
}
 void FileMessage::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.FileMessage.id)
}
 void FileMessage::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.FileMessage.id)
}
 ::std::string* FileMessage::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:Services.FileMessage.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FileMessage::release_id() {
  // @@protoc_insertion_point(field_release:Services.FileMessage.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FileMessage::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Services.FileMessage.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileBytes::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileBytes::FileBytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Services.FileBytes)
}

void FileBytes::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FileBytes::FileBytes(const FileBytes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Services.FileBytes)
}

void FileBytes::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FileBytes::~FileBytes() {
  // @@protoc_insertion_point(destructor:Services.FileBytes)
  SharedDtor();
}

void FileBytes::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void FileBytes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileBytes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileBytes_descriptor_;
}

const FileBytes& FileBytes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_services_2ffile_5fservice_2eproto();
  return *default_instance_;
}

FileBytes* FileBytes::default_instance_ = NULL;

FileBytes* FileBytes::New(::google::protobuf::Arena* arena) const {
  FileBytes* n = new FileBytes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileBytes::Clear() {
// @@protoc_insertion_point(message_clear_start:Services.FileBytes)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool FileBytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Services.FileBytes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Services.FileBytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Services.FileBytes)
  return false;
#undef DO_
}

void FileBytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Services.FileBytes)
  // optional bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:Services.FileBytes)
}

::google::protobuf::uint8* FileBytes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Services.FileBytes)
  // optional bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Services.FileBytes)
  return target;
}

int FileBytes::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Services.FileBytes)
  int total_size = 0;

  // optional bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileBytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Services.FileBytes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FileBytes* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FileBytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Services.FileBytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Services.FileBytes)
    MergeFrom(*source);
  }
}

void FileBytes::MergeFrom(const FileBytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Services.FileBytes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void FileBytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Services.FileBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileBytes::CopyFrom(const FileBytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Services.FileBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileBytes::IsInitialized() const {

  return true;
}

void FileBytes::Swap(FileBytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileBytes::InternalSwap(FileBytes* other) {
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileBytes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileBytes_descriptor_;
  metadata.reflection = FileBytes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileBytes

// optional bytes data = 1;
void FileBytes::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FileBytes::data() const {
  // @@protoc_insertion_point(field_get:Services.FileBytes.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FileBytes::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Services.FileBytes.data)
}
 void FileBytes::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Services.FileBytes.data)
}
 void FileBytes::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Services.FileBytes.data)
}
 ::std::string* FileBytes::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:Services.FileBytes.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FileBytes::release_data() {
  // @@protoc_insertion_point(field_release:Services.FileBytes.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FileBytes::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:Services.FileBytes.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmptyMessage::EmptyMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Services.EmptyMessage)
}

void EmptyMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EmptyMessage::EmptyMessage(const EmptyMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Services.EmptyMessage)
}

void EmptyMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

EmptyMessage::~EmptyMessage() {
  // @@protoc_insertion_point(destructor:Services.EmptyMessage)
  SharedDtor();
}

void EmptyMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EmptyMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmptyMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EmptyMessage_descriptor_;
}

const EmptyMessage& EmptyMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_services_2ffile_5fservice_2eproto();
  return *default_instance_;
}

EmptyMessage* EmptyMessage::default_instance_ = NULL;

EmptyMessage* EmptyMessage::New(::google::protobuf::Arena* arena) const {
  EmptyMessage* n = new EmptyMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EmptyMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Services.EmptyMessage)
}

bool EmptyMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Services.EmptyMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:Services.EmptyMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Services.EmptyMessage)
  return false;
#undef DO_
}

void EmptyMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Services.EmptyMessage)
  // @@protoc_insertion_point(serialize_end:Services.EmptyMessage)
}

::google::protobuf::uint8* EmptyMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Services.EmptyMessage)
  // @@protoc_insertion_point(serialize_to_array_end:Services.EmptyMessage)
  return target;
}

int EmptyMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Services.EmptyMessage)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmptyMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Services.EmptyMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EmptyMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EmptyMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Services.EmptyMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Services.EmptyMessage)
    MergeFrom(*source);
  }
}

void EmptyMessage::MergeFrom(const EmptyMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Services.EmptyMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
}

void EmptyMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Services.EmptyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyMessage::CopyFrom(const EmptyMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Services.EmptyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyMessage::IsInitialized() const {

  return true;
}

void EmptyMessage::Swap(EmptyMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmptyMessage::InternalSwap(EmptyMessage* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EmptyMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EmptyMessage_descriptor_;
  metadata.reflection = EmptyMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EmptyMessage

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExistMessage::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExistMessage::ExistMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Services.ExistMessage)
}

void ExistMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ExistMessage::ExistMessage(const ExistMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Services.ExistMessage)
}

void ExistMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  result_ = false;
}

ExistMessage::~ExistMessage() {
  // @@protoc_insertion_point(destructor:Services.ExistMessage)
  SharedDtor();
}

void ExistMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExistMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExistMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExistMessage_descriptor_;
}

const ExistMessage& ExistMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_services_2ffile_5fservice_2eproto();
  return *default_instance_;
}

ExistMessage* ExistMessage::default_instance_ = NULL;

ExistMessage* ExistMessage::New(::google::protobuf::Arena* arena) const {
  ExistMessage* n = new ExistMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExistMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Services.ExistMessage)
  result_ = false;
}

bool ExistMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Services.ExistMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Services.ExistMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Services.ExistMessage)
  return false;
#undef DO_
}

void ExistMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Services.ExistMessage)
  // optional bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:Services.ExistMessage)
}

::google::protobuf::uint8* ExistMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Services.ExistMessage)
  // optional bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Services.ExistMessage)
  return target;
}

int ExistMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Services.ExistMessage)
  int total_size = 0;

  // optional bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExistMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Services.ExistMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ExistMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ExistMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Services.ExistMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Services.ExistMessage)
    MergeFrom(*source);
  }
}

void ExistMessage::MergeFrom(const ExistMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Services.ExistMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void ExistMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Services.ExistMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExistMessage::CopyFrom(const ExistMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Services.ExistMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExistMessage::IsInitialized() const {

  return true;
}

void ExistMessage::Swap(ExistMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExistMessage::InternalSwap(ExistMessage* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExistMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExistMessage_descriptor_;
  metadata.reflection = ExistMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExistMessage

// optional bool result = 1;
void ExistMessage::clear_result() {
  result_ = false;
}
 bool ExistMessage::result() const {
  // @@protoc_insertion_point(field_get:Services.ExistMessage.result)
  return result_;
}
 void ExistMessage::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:Services.ExistMessage.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Services

// @@protoc_insertion_point(global_scope)
