// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datatypes/group.proto

#ifndef PROTOBUF_datatypes_2fgroup_2eproto__INCLUDED
#define PROTOBUF_datatypes_2fgroup_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "datatypes/key.pb.h"
// @@protoc_insertion_point(includes)

namespace DataTypes {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_datatypes_2fgroup_2eproto();
void protobuf_AssignDesc_datatypes_2fgroup_2eproto();
void protobuf_ShutdownFile_datatypes_2fgroup_2eproto();

class Group;
class Groups;

enum ItemsSelectionType {
  Selected_Unspecified = 0,
  Selected_All = 1,
  Selected_None = 2,
  Selected_Custom = 3,
  ItemsSelectionType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ItemsSelectionType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ItemsSelectionType_IsValid(int value);
const ItemsSelectionType ItemsSelectionType_MIN = Selected_Unspecified;
const ItemsSelectionType ItemsSelectionType_MAX = Selected_Custom;
const int ItemsSelectionType_ARRAYSIZE = ItemsSelectionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ItemsSelectionType_descriptor();
inline const ::std::string& ItemsSelectionType_Name(ItemsSelectionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ItemsSelectionType_descriptor(), value);
}
inline bool ItemsSelectionType_Parse(
    const ::std::string& name, ItemsSelectionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ItemsSelectionType>(
    ItemsSelectionType_descriptor(), name, value);
}
// ===================================================================

class Group : public ::google::protobuf::Message {
 public:
  Group();
  virtual ~Group();

  Group(const Group& from);

  inline Group& operator=(const Group& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Group& default_instance();

  void Swap(Group* other);

  // implements Message ----------------------------------------------

  inline Group* New() const { return New(NULL); }

  Group* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Group& from);
  void MergeFrom(const Group& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Group* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DataTypes.Key id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::DataTypes::Key& id() const;
  ::DataTypes::Key* mutable_id();
  ::DataTypes::Key* release_id();
  void set_allocated_id(::DataTypes::Key* id);

  // optional .DataTypes.ItemsSelectionType selection_type = 2;
  void clear_selection_type();
  static const int kSelectionTypeFieldNumber = 2;
  ::DataTypes::ItemsSelectionType selection_type() const;
  void set_selection_type(::DataTypes::ItemsSelectionType value);

  // repeated .DataTypes.Key persons = 3;
  int persons_size() const;
  void clear_persons();
  static const int kPersonsFieldNumber = 3;
  const ::DataTypes::Key& persons(int index) const;
  ::DataTypes::Key* mutable_persons(int index);
  ::DataTypes::Key* add_persons();
  ::google::protobuf::RepeatedPtrField< ::DataTypes::Key >*
      mutable_persons();
  const ::google::protobuf::RepeatedPtrField< ::DataTypes::Key >&
      persons() const;

  // @@protoc_insertion_point(class_scope:DataTypes.Group)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::DataTypes::Key* id_;
  ::google::protobuf::RepeatedPtrField< ::DataTypes::Key > persons_;
  int selection_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_datatypes_2fgroup_2eproto();
  friend void protobuf_AssignDesc_datatypes_2fgroup_2eproto();
  friend void protobuf_ShutdownFile_datatypes_2fgroup_2eproto();

  void InitAsDefaultInstance();
  static Group* default_instance_;
};
// -------------------------------------------------------------------

class Groups : public ::google::protobuf::Message {
 public:
  Groups();
  virtual ~Groups();

  Groups(const Groups& from);

  inline Groups& operator=(const Groups& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Groups& default_instance();

  void Swap(Groups* other);

  // implements Message ----------------------------------------------

  inline Groups* New() const { return New(NULL); }

  Groups* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Groups& from);
  void MergeFrom(const Groups& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Groups* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DataTypes.Group items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::DataTypes::Group& items(int index) const;
  ::DataTypes::Group* mutable_items(int index);
  ::DataTypes::Group* add_items();
  ::google::protobuf::RepeatedPtrField< ::DataTypes::Group >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::DataTypes::Group >&
      items() const;

  // optional int64 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::int64 count() const;
  void set_count(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:DataTypes.Groups)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::DataTypes::Group > items_;
  ::google::protobuf::int64 count_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_datatypes_2fgroup_2eproto();
  friend void protobuf_AssignDesc_datatypes_2fgroup_2eproto();
  friend void protobuf_ShutdownFile_datatypes_2fgroup_2eproto();

  void InitAsDefaultInstance();
  static Groups* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Group

// optional .DataTypes.Key id = 1;
inline bool Group::has_id() const {
  return !_is_default_instance_ && id_ != NULL;
}
inline void Group::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
inline const ::DataTypes::Key& Group::id() const {
  // @@protoc_insertion_point(field_get:DataTypes.Group.id)
  return id_ != NULL ? *id_ : *default_instance_->id_;
}
inline ::DataTypes::Key* Group::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::DataTypes::Key;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.Group.id)
  return id_;
}
inline ::DataTypes::Key* Group::release_id() {
  // @@protoc_insertion_point(field_release:DataTypes.Group.id)
  
  ::DataTypes::Key* temp = id_;
  id_ = NULL;
  return temp;
}
inline void Group::set_allocated_id(::DataTypes::Key* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.Group.id)
}

// optional .DataTypes.ItemsSelectionType selection_type = 2;
inline void Group::clear_selection_type() {
  selection_type_ = 0;
}
inline ::DataTypes::ItemsSelectionType Group::selection_type() const {
  // @@protoc_insertion_point(field_get:DataTypes.Group.selection_type)
  return static_cast< ::DataTypes::ItemsSelectionType >(selection_type_);
}
inline void Group::set_selection_type(::DataTypes::ItemsSelectionType value) {
  
  selection_type_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.Group.selection_type)
}

// repeated .DataTypes.Key persons = 3;
inline int Group::persons_size() const {
  return persons_.size();
}
inline void Group::clear_persons() {
  persons_.Clear();
}
inline const ::DataTypes::Key& Group::persons(int index) const {
  // @@protoc_insertion_point(field_get:DataTypes.Group.persons)
  return persons_.Get(index);
}
inline ::DataTypes::Key* Group::mutable_persons(int index) {
  // @@protoc_insertion_point(field_mutable:DataTypes.Group.persons)
  return persons_.Mutable(index);
}
inline ::DataTypes::Key* Group::add_persons() {
  // @@protoc_insertion_point(field_add:DataTypes.Group.persons)
  return persons_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::DataTypes::Key >*
Group::mutable_persons() {
  // @@protoc_insertion_point(field_mutable_list:DataTypes.Group.persons)
  return &persons_;
}
inline const ::google::protobuf::RepeatedPtrField< ::DataTypes::Key >&
Group::persons() const {
  // @@protoc_insertion_point(field_list:DataTypes.Group.persons)
  return persons_;
}

// -------------------------------------------------------------------

// Groups

// repeated .DataTypes.Group items = 1;
inline int Groups::items_size() const {
  return items_.size();
}
inline void Groups::clear_items() {
  items_.Clear();
}
inline const ::DataTypes::Group& Groups::items(int index) const {
  // @@protoc_insertion_point(field_get:DataTypes.Groups.items)
  return items_.Get(index);
}
inline ::DataTypes::Group* Groups::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:DataTypes.Groups.items)
  return items_.Mutable(index);
}
inline ::DataTypes::Group* Groups::add_items() {
  // @@protoc_insertion_point(field_add:DataTypes.Groups.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::DataTypes::Group >*
Groups::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:DataTypes.Groups.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::DataTypes::Group >&
Groups::items() const {
  // @@protoc_insertion_point(field_list:DataTypes.Groups.items)
  return items_;
}

// optional int64 count = 2;
inline void Groups::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Groups::count() const {
  // @@protoc_insertion_point(field_get:DataTypes.Groups.count)
  return count_;
}
inline void Groups::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.Groups.count)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace DataTypes

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::DataTypes::ItemsSelectionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DataTypes::ItemsSelectionType>() {
  return ::DataTypes::ItemsSelectionType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_datatypes_2fgroup_2eproto__INCLUDED
